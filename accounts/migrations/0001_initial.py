# Generated by Django 5.2.4 on 2025-09-15 07:45

import accounts.models
import django.contrib.auth.models
import django.core.validators
import django.utils.timezone
import imagekit.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_customer', models.BooleanField(default=False)),
                ('is_engineer', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=254)),
                ('username', models.CharField(max_length=1000, unique=True)),
                ('first_name', models.CharField(default='', max_length=20)),
                ('last_name', models.CharField(default='', max_length=100)),
                ('avatar', imagekit.models.fields.ProcessedImageField(blank=True, default='avatars/avt.jpg', null=True, upload_to=accounts.models.user_directory_path)),
                ('school', models.CharField(max_length=200, null=True)),
                ('work_place', models.CharField(choices=[('Ban lãnh đạo', 'Ban lãnh đạo'), ('Phòng mầm non 1', 'Phòng mầm non 1'), ('Phòng mầm non 2', 'Phòng mầm non 2'), ('Phòng mầm non 3', 'Phòng mầm non 3'), ('Phòng tiểu học', 'Phòng tiểu học'), ('Phòng hành chính', 'Phòng hành chính'), ('Ban kiểm soát', 'Ban kiểm soát'), ('Phòng kế toán', 'Phòng kế toán'), ('Phòng kinh doanh marketing', 'Phòng kinh doanh marketing'), ('Phòng nhân sự', 'Phòng nhân sự'), ('Học viện Enspire Láng Hạ', 'Học viện Enspire Láng Hạ'), ('Enspire Hải Phòng', 'Enspire Hải Phòng'), ('Phòng công nghệ', 'Phòng công nghệ'), ('Phòng R&D mầm non', 'Phòng R&D mầm non')], default='', max_length=50)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Lỗi, hãy nhập lại!', regex='^\\+?1?\\d{9,15}$')])),
                ('gender', models.CharField(blank=True, choices=[('Nam', 'Male'), ('Nữ', 'Female'), ('Khác', 'Other')], max_length=4, null=True)),
                ('title', models.CharField(default='', max_length=1000)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
